- name: Update apt
  ansible.builtin.apt:
    update_cache: yes

- name: Install required dependencies
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl

- name: Ensure conflicting packages arent installed
  ansible.builtin.apt:
    name:
      - docker.io
      - docker-compose
      - docker-compose-v2
      - docker-doc
      - podman-docker
    state: absent

- name: Ensure directory exists for /etc/apt/keyrings
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker apt key
  ansible.builtin.get_url:
    url: "{{ docker_apt_gpg_key_url }}"
    dest: /etc/apt/keyrings/docker.asc
    mode: "0444"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "{{ docker_apt_repository }}"
    filename: "{{ docker_apt_filename }}"
    update_cache: true

- name: Install docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  notify: Restart docker

- name: Ensure docker is enabled and started on boot
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Ensure /etc/docker directory exists.
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: "0755"

- name: Configure Docker daemon options to allow ipv6
  ansible.builtin.copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: "0644"
  notify: Restart docker

- name: Ensure handlers are notified now to avoid firewall conflicts
  ansible.builtin.meta: flush_handlers

- name: Create docker group
  ansible.builtin.group:
    name: docker

- name: Add the ssh user to the docker group
  ansible.builtin.user:
    name: "{{ ansible_env.SUDO_USER }}"
    groups: docker
    append: true
