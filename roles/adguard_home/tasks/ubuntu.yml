- name: Create a image directory for container data
  ansible.builtin.file:
    path: "{{ container_parent_data_directory }}/{{ container_name }}"
    state: directory
    mode: "0755"

- name: Create a work directory for adguard_home container data
  ansible.builtin.file:
    path: "{{ container_parent_data_directory }}/{{ container_name }}/work"
    state: directory
    mode: "0755"

- name: Create a conf directory for adguard_home container data
  ansible.builtin.file:
    path: "{{ container_parent_data_directory }}/{{ container_name }}/conf"
    state: directory
    mode: "0755"

- name: Create the resolved.conf.d directory if it doesn't exist
  ansible.builtin.file:
    path: "/etc/systemd/resolved.conf.d"
    state: directory
    mode: "0755"

- name: Create resolvd.conf for adguard
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d/adguardhome.conf
    state: touch
    mode: "0644"

# We do this so if Adguard fails to start our internet isnt fully broken
- name: Copy a starting dns config before switching to adguard
  ansible.builtin.copy:
    dest: /etc/systemd/resolved.conf.d/adguardhome.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      [Resolve]
      DNS=1.1.1.1
      DNSStubListener=no

- name: Backup existing resolv.conf
  ansible.builtin.copy:
    src: /etc/resolv.conf
    dest: /etc/resolv.conf.backup
    owner: root
    group: root

- name: Create a symbolic link
  ansible.builtin.file:
    src: /run/systemd/resolve/resolv.conf
    dest: /etc/resolv.conf
    owner: foo
    group: foo
    state: link

- name: Restart systemd-resolved for settings to take affect
  ansible.builtin.service:
    name: systemd-resolved.service
    state: restarted

# - name: Pull the image before temporarily breaking DNS
#   community.docker.docker_image:
#     name: adguard/adguardhome
#     source: pull

# - name: Stop systemd-resolved - this will break dns until we get Adguard running!
#   ansible.builtin.service:
#     name: systemd-resolved.service
#     state: stopped
#     enabled: false

# TODO: IPV6 + Better Network To Avoid Port 53 Fun
# https://aschmid-it.com/en/adguard-home-on-docker-with-ipv6/
# https://docs.docker.com/config/daemon/ipv6/

- name: Create the container - DNS should come back after this starts up
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: adguard/adguardhome
    state: started
    restart_policy: unless-stopped
    detach: true
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "80:80/tcp" # We are going to run the Web UI on 3000, and not use HTTPS or DNS-over-HTTPS so this isn't needed
      # - "443:443/tcp" # We are going to run the Web UI on 3000, and not use HTTPS or DNS-over-HTTPS so this isn't needed
      # - "443:443/udp" # We are going to run the Web UI on 3000, and not use HTTPS or DNS-over-HTTPS so this isn't needed
      - "3000:3000/tcp"
      # - "67:67/udp" # Uncomment if you plan to use Adguard Home as a DHCP server
      # - "68:68/tcp" # Uncomment if you plan to use Adguard Home as a DHCP server
      # - "68:68/udp" # Uncomment if you plan to use Adguard Home as a DHCP server
      # - "853:853/tcp" # Uncomment if you plan to use Adguard Home as a DNS-over-TLS server
      # - "784:784/udp" # Uncomment if you plan to use AdGuard Home as a DNS-over-QUIC server
      # - "853:853/udp" # Uncomment if you plan to use AdGuard Home as a DNS-over-QUIC server
      # - "8853:8853/udp" # Uncomment if you plan to use AdGuard Home as a DNS-over-QUIC server
      # - "5443:5443/tcp" # Uncomment if you plan to use AdGuard Home as a DNSCrypt server
      # - "5443:5443/udp" # Uncomment if you plan to use AdGuard Home as a DNSCrypt server
    volumes:
      - "{{ container_parent_data_directory }}/{{ container_name }}/work:/opt/adguardhome/work"
      - "{{ container_parent_data_directory }}/{{ container_name }}/conf:/opt/adguardhome/conf"

- name: Copy a final dns config after adguard started
  ansible.builtin.copy:
    dest: /etc/systemd/resolved.conf.d/adguardhome.conf
    owner: root
    group: root
    mode: "0644"
    content: |
      [Resolve]
      DNS=127.0.0.1
      DNSStubListener=no

- name: Restart systemd-resolved for settings to take affect
  ansible.builtin.service:
    name: systemd-resolved.service
    state: restarted
